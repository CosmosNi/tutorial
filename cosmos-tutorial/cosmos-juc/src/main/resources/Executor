
常用线程池：
newFixedThreadPool：创建一个定长的线程池，每当提交一个任务就创建一个线程，直到
                    达到池的最大长度，这时线程会保持长度不在变化。（如果一个线程由于非预期的Exception而结束，线程池会补充一个新的线程）。
newCacheThreadPool：创建一个可缓存的线程池，如果当前线程池的长度超过了处理的需要时，他可以灵活的回收空闲的线程，当需求增加时，他可以灵活
                     地添加新的线程，而不会对池的长度做任何限制。
newSingleThreadExcutor：创建一个单线程化的excutor，他只创建唯一的工作线程来执行任务，如果这个线程异常结束，会有另一个取代他。excutpr会保证
                        任务依照队列所规定的顺序（FIFO，LIFO，优先级）执行。
newScheduledThreadPool：创建一个定长的线程池，而且支持定时的以及周期性的任务执行，类似于Timer。

Excutor的生命周期：
excutor是异步执行任务。所以在任何时间里，所有之前提交的任务的状态都不能立即可见。
ExecutorService实现了Excutor，用于线程池的生命周期管理。ExecutorService按时了生命周期有三种状态，分别为：运行，关闭和终止。
在最初创建后的初始状态是运行状态。shutdown方法会启动一个平缓的关闭过程，停止接收新的任务，同时等待已经提交的任务完成，包括尚未开始执行的任务。
shutdownNow方法会启动一个强制的关闭过程，尝试取消所有运行中的任务和排在队列中尚未开始的任务。
